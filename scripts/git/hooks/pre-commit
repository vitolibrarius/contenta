#! /usr/bin/env php
<?php

# Fetch current commit state
$files  = array();
$return = 0;
exec( "git rev-parse --verify HEAD 2> /dev/null", $set, $return );

# Grab commited files
$against = ($return === 0 ? 'HEAD' : '4b825dc642cb6eb9a060e54bf8d69288fbee4904');
exec( "git diff-index --cached --full-index {$against}", $files );

$pattern = '/\.ph(tml|p)$/';
$exit_status = 0;
foreach ( $files as $file )
{
	$parts  = explode( " ", $file );
	$sha    = $parts[3];
	$name   = substr( $parts[4], 2 );
	$status = substr( $parts[4], 0, 1 );
	$path   = str_replace( "{$status}\t", "", $parts[4] );

	// don't check files that aren't PHP
	if ( preg_match($pattern, $name) == false) {
		continue;
	}

	// if the file has been moved or deleted,
	// the old filename should be skipped
	if ( file_exists($name) == false || 'D' === $status ) {
		continue;
	}

	// Unmerged
	if ( 'U' === $status ) {
		echo " |- {$name} is unmerged. You must complete the merge before it can be committed." . PHP_EOL;
		continue;
	}

	// Internal Git Bug
	if ( 'X' === $status ) {
		echo " |- {$name}: unknown status. Please file a bug report for git. Really." . PHP_EOL;
		continue;
	}


	$output = array();
	$result = 0;
	// Grab the file from the list of files in the commit
	$cmd = sprintf( "git cat-file -p %s | php -l -ddisplay_errors\=1 -derror_reporting\=E_ALL -dlog_errors\=0", escapeshellarg( $sha ));
	exec( $cmd, $output, $result );
	if ( 0 != $result ) {
		echo PHP_EOL;
		echo "--------------------------" . PHP_EOL;
		echo " PHP Lint Errors" . PHP_EOL;
		echo "--------------------------" . PHP_EOL;

		foreach ( $output as $line ) {
			if ( empty($line) ||  strstr($line, ':') == false ) {
				continue;
			}

			echo preg_replace( '/\s(in)\s/i', " in {$name} ", " |- {$line}" . PHP_EOL );
		}

		$exit_status = 1;
	}
}

if ( 0 != $exit_status ) {
	echo "-----------------------------------------" . PHP_EOL;
	echo " Please fix all errors before commiting." . PHP_EOL;
	echo "-----------------------------------------" . PHP_EOL . PHP_EOL;
	# End and abort
}

exit( $exit_status );

?>
